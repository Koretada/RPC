/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SUBSTRING_H_RPCGEN
#define _SUBSTRING_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct containsforbiddensubstr_1_argument {
	char *arg1;
	char *arg2;
	char *arg3;
	char *arg4;
};
typedef struct containsforbiddensubstr_1_argument containsforbiddensubstr_1_argument;

#define SUBSTRING 0x12345678
#define V1 1

#if defined(__STDC__) || defined(__cplusplus)
#define generaterandomstring 1
extern  char ** generaterandomstring_1(int , CLIENT *);
extern  char ** generaterandomstring_1_svc(int , struct svc_req *);
#define containsforbiddensubstr 2
extern  bool_t * containsforbiddensubstr_1(char *, char *, char *, char *, CLIENT *);
extern  bool_t * containsforbiddensubstr_1_svc(char *, char *, char *, char *, struct svc_req *);
extern int substring_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define generaterandomstring 1
extern  char ** generaterandomstring_1();
extern  char ** generaterandomstring_1_svc();
#define containsforbiddensubstr 2
extern  bool_t * containsforbiddensubstr_1();
extern  bool_t * containsforbiddensubstr_1_svc();
extern int substring_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_containsforbiddensubstr_1_argument (XDR *, containsforbiddensubstr_1_argument*);

#else /* K&R C */
extern bool_t xdr_containsforbiddensubstr_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SUBSTRING_H_RPCGEN */
